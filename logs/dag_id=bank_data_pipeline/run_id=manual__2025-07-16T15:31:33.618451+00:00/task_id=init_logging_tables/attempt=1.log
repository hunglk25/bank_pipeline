[2025-07-16T15:32:05.926+0000] {local_task_job_runner.py:120} INFO - ::group::Pre task execution logs
[2025-07-16T15:32:05.976+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=non-requeueable deps ti=<TaskInstance: bank_data_pipeline.init_logging_tables manual__2025-07-16T15:31:33.618451+00:00 [queued]>
[2025-07-16T15:32:05.986+0000] {taskinstance.py:2076} INFO - Dependencies all met for dep_context=requeueable deps ti=<TaskInstance: bank_data_pipeline.init_logging_tables manual__2025-07-16T15:31:33.618451+00:00 [queued]>
[2025-07-16T15:32:05.987+0000] {taskinstance.py:2306} INFO - Starting attempt 1 of 3
[2025-07-16T15:32:06.003+0000] {taskinstance.py:2330} INFO - Executing <Task(PostgresOperator): init_logging_tables> on 2025-07-16 15:31:33.618451+00:00
[2025-07-16T15:32:06.014+0000] {logging_mixin.py:188} WARNING - /home/***/.local/lib/python3.12/site-packages/***/task/task_runner/standard_task_runner.py:61 DeprecationWarning: This process (pid=928) is multi-threaded, use of fork() may lead to deadlocks in the child.
[2025-07-16T15:32:06.015+0000] {standard_task_runner.py:63} INFO - Started process 929 to run task
[2025-07-16T15:32:06.016+0000] {standard_task_runner.py:90} INFO - Running: ['***', 'tasks', 'run', 'bank_data_pipeline', 'init_logging_tables', 'manual__2025-07-16T15:31:33.618451+00:00', '--job-id', '14', '--raw', '--subdir', 'DAGS_FOLDER/bank_data_pipeline.py', '--cfg-path', '/tmp/tmp9cdtrcxa']
[2025-07-16T15:32:06.020+0000] {standard_task_runner.py:91} INFO - Job 14: Subtask init_logging_tables
[2025-07-16T15:32:06.044+0000] {logging_mixin.py:188} WARNING - /home/***/.local/lib/python3.12/site-packages/***/settings.py:195 DeprecationWarning: The sql_alchemy_conn option in [core] has been moved to the sql_alchemy_conn option in [database] - the old setting has been used, but please update your config.
[2025-07-16T15:32:06.108+0000] {task_command.py:426} INFO - Running <TaskInstance: bank_data_pipeline.init_logging_tables manual__2025-07-16T15:31:33.618451+00:00 [running]> on host 4c2c441a4888
[2025-07-16T15:32:06.229+0000] {taskinstance.py:2648} INFO - Exporting env vars: AIRFLOW_CTX_DAG_OWNER='data_engineering_team' AIRFLOW_CTX_DAG_ID='bank_data_pipeline' AIRFLOW_CTX_TASK_ID='init_logging_tables' AIRFLOW_CTX_EXECUTION_DATE='2025-07-16T15:31:33.618451+00:00' AIRFLOW_CTX_TRY_NUMBER='1' AIRFLOW_CTX_DAG_RUN_ID='manual__2025-07-16T15:31:33.618451+00:00'
[2025-07-16T15:32:06.230+0000] {taskinstance.py:430} INFO - ::endgroup::
[2025-07-16T15:32:06.246+0000] {sql.py:276} INFO - Executing: -- Create logging tables for data pipeline
-- These tables will store pipeline execution logs, errors, and quality check results

-- 1. Pipeline execution log table
CREATE TABLE IF NOT EXISTS pipeline_execution_log (
    log_id SERIAL PRIMARY KEY,
    run_id VARCHAR(100) NOT NULL,
    dag_id VARCHAR(100) NOT NULL,
    task_id VARCHAR(100) NOT NULL,
    execution_date TIMESTAMP NOT NULL,
    start_time TIMESTAMP DEFAULT NOW(),
    end_time TIMESTAMP,
    status VARCHAR(20) NOT NULL, -- SUCCESS, FAILED, RUNNING
    error_message TEXT,
    records_processed INTEGER DEFAULT 0,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 2. Data quality check log table
CREATE TABLE IF NOT EXISTS data_quality_log (
    log_id SERIAL PRIMARY KEY,
    run_id VARCHAR(100),
    check_timestamp TIMESTAMP DEFAULT NOW(),
    table_name VARCHAR(100),
    check_type VARCHAR(50), -- NULL_CHECK, DUPLICATE_CHECK, BUSINESS_RULE, etc.
    issue_count INTEGER DEFAULT 0,
    issues_json TEXT, -- JSON array of specific issues
    status VARCHAR(20) NOT NULL, -- PASSED, FAILED
    execution_time_ms INTEGER,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 3. Data upload error log table
CREATE TABLE IF NOT EXISTS data_upload_error_log (
    error_id SERIAL PRIMARY KEY,
    run_id VARCHAR(100),
    table_name VARCHAR(100),
    error_timestamp TIMESTAMP DEFAULT NOW(),
    error_type VARCHAR(50), -- DATABASE_ERROR, VALIDATION_ERROR, etc.
    error_message TEXT,
    failed_record_json TEXT, -- JSON of the record that failed
    retry_count INTEGER DEFAULT 0,
    resolved BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT NOW()
);

-- 4. General pipeline error log table
CREATE TABLE IF NOT EXISTS pipeline_error_log (
    error_id SERIAL PRIMARY KEY,
    run_id VARCHAR(100),
    dag_id VARCHAR(100),
    task_id VARCHAR(100),
    error_timestamp TIMESTAMP DEFAULT NOW(),
    error_type VARCHAR(50),
    error_message TEXT,
    stack_trace TEXT,
    context_data TEXT, -- JSON with additional context
    severity VARCHAR(20) DEFAULT 'ERROR', -- ERROR, WARNING, CRITICAL
    created_at TIMESTAMP DEFAULT NOW()
);

-- 5. Data statistics table for monitoring
CREATE TABLE IF NOT EXISTS data_statistics_log (
    stat_id SERIAL PRIMARY KEY,
    run_id VARCHAR(100),
    table_name VARCHAR(100),
    stat_timestamp TIMESTAMP DEFAULT NOW(),
    record_count INTEGER,
    null_count INTEGER,
    duplicate_count INTEGER,
    avg_processing_time_ms INTEGER,
    min_value DECIMAL,
    max_value DECIMAL,
    created_at TIMESTAMP DEFAULT NOW()
);

-- Create indexes for better query performance
CREATE INDEX IF NOT EXISTS idx_pipeline_execution_run_id ON pipeline_execution_log(run_id);
CREATE INDEX IF NOT EXISTS idx_pipeline_execution_status ON pipeline_execution_log(status);
CREATE INDEX IF NOT EXISTS idx_pipeline_execution_date ON pipeline_execution_log(execution_date);

CREATE INDEX IF NOT EXISTS idx_data_quality_run_id ON data_quality_log(run_id);
CREATE INDEX IF NOT EXISTS idx_data_quality_status ON data_quality_log(status);
CREATE INDEX IF NOT EXISTS idx_data_quality_table ON data_quality_log(table_name);

CREATE INDEX IF NOT EXISTS idx_upload_error_run_id ON data_upload_error_log(run_id);
CREATE INDEX IF NOT EXISTS idx_upload_error_resolved ON data_upload_error_log(resolved);
CREATE INDEX IF NOT EXISTS idx_upload_error_timestamp ON data_upload_error_log(error_timestamp);

CREATE INDEX IF NOT EXISTS idx_pipeline_error_run_id ON pipeline_error_log(run_id);
CREATE INDEX IF NOT EXISTS idx_pipeline_error_severity ON pipeline_error_log(severity);
CREATE INDEX IF NOT EXISTS idx_pipeline_error_timestamp ON pipeline_error_log(error_timestamp);

CREATE INDEX IF NOT EXISTS idx_data_stats_run_id ON data_statistics_log(run_id);
CREATE INDEX IF NOT EXISTS idx_data_stats_table ON data_statistics_log(table_name);

-- Create a view for easy monitoring of pipeline health
CREATE OR REPLACE VIEW pipeline_health_summary AS
SELECT 
    DATE(execution_date) as execution_date,
    dag_id,
    COUNT(*) as total_runs,
    COUNT(CASE WHEN status = 'SUCCESS' THEN 1 END) as successful_runs,
    COUNT(CASE WHEN status = 'FAILED' THEN 1 END) as failed_runs,
    AVG(EXTRACT(EPOCH FROM (end_time - start_time))) as avg_duration_seconds,
    SUM(records_processed) as total_records_processed
FROM pipeline_execution_log 
WHERE execution_date >= CURRENT_DATE - INTERVAL '7 days'
GROUP BY DATE(execution_date), dag_id
ORDER BY execution_date DESC, dag_id;

-- Create a view for data quality summary
CREATE OR REPLACE VIEW data_quality_summary AS
SELECT 
    DATE(check_timestamp) as check_date,
    table_name,
    check_type,
    COUNT(*) as total_checks,
    COUNT(CASE WHEN status = 'PASSED' THEN 1 END) as passed_checks,
    COUNT(CASE WHEN status = 'FAILED' THEN 1 END) as failed_checks,
    SUM(issue_count) as total_issues
FROM data_quality_log 
WHERE check_timestamp >= CURRENT_DATE - INTERVAL '7 days'
GROUP BY DATE(check_timestamp), table_name, check_type
ORDER BY check_date DESC, table_name, check_type;

-- Insert sample data for testing (optional)
-- INSERT INTO pipeline_execution_log (run_id, dag_id, task_id, execution_date, status)
-- VALUES ('test_run_001', 'bank_data_pipeline', 'generate_data', NOW(), 'SUCCESS');

COMMIT;
[2025-07-16T15:32:06.260+0000] {taskinstance.py:441} INFO - ::group::Post task execution logs
[2025-07-16T15:32:06.276+0000] {taskinstance.py:2905} ERROR - Task failed with exception
Traceback (most recent call last):
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 465, in _execute_task
    result = _execute_callable(context=context, **execute_callable_kwargs)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/taskinstance.py", line 432, in _execute_callable
    return execute_callable(context=context, **execute_callable_kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/baseoperator.py", line 400, in wrapper
    return func(self, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/operators/sql.py", line 277, in execute
    hook = self.get_db_hook()
           ^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/operators/sql.py", line 188, in get_db_hook
    return self._hook
           ^^^^^^^^^^
  File "/usr/local/lib/python3.12/functools.py", line 995, in __get__
    val = self.func(instance)
          ^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/providers/common/sql/operators/sql.py", line 150, in _hook
    conn = BaseHook.get_connection(conn_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/hooks/base.py", line 83, in get_connection
    conn = Connection.get_connection_from_secrets(conn_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/airflow/.local/lib/python3.12/site-packages/airflow/models/connection.py", line 519, in get_connection_from_secrets
    raise AirflowNotFoundException(f"The conn_id `{conn_id}` isn't defined")
airflow.exceptions.AirflowNotFoundException: The conn_id `postgres_data` isn't defined
[2025-07-16T15:32:06.282+0000] {taskinstance.py:1206} INFO - Marking task as UP_FOR_RETRY. dag_id=bank_data_pipeline, task_id=init_logging_tables, run_id=manual__2025-07-16T15:31:33.618451+00:00, execution_date=20250716T153133, start_date=20250716T153205, end_date=20250716T153206
[2025-07-16T15:32:06.294+0000] {standard_task_runner.py:110} ERROR - Failed to execute job 14 for task init_logging_tables (The conn_id `postgres_data` isn't defined; 929)
[2025-07-16T15:32:06.310+0000] {local_task_job_runner.py:240} INFO - Task exited with return code 1
[2025-07-16T15:32:06.340+0000] {logging_mixin.py:188} WARNING - /home/***/.local/lib/python3.12/site-packages/***/models/baseoperator.py:1296 AirflowProviderDeprecationWarning: Call to deprecated class PostgresOperator. (Please use `***.providers.common.sql.operators.sql.SQLExecuteQueryOperator`.Also, you can provide `hook_params={'schema': <database>}`.)
[2025-07-16T15:32:06.374+0000] {taskinstance.py:3498} INFO - 0 downstream tasks scheduled from follow-on schedule check
[2025-07-16T15:32:06.376+0000] {local_task_job_runner.py:222} INFO - ::endgroup::
