services:
  # 1. PostgreSQL for Airflow
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"

  # 2. PostgreSQL for saving your custom data
  postgres_data:
    image: postgres:15
    container_name: postgres_data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: userpass
      POSTGRES_DB: mydata
    ports:
      - "5433:5432"  # map container port 5432 to host port 5433
    volumes:
      - ./sql:/docker-entrypoint-initdb.d

  # 3. pgAdmin to manage both databases
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8082:80"
    volumes:
      - ./servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
      - postgres_data

  # 4. Airflow Init - create DB and admin user
  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:2.9.1-python3.10
    container_name: airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    entrypoint: /bin/bash
    command:
      - -c
      - |
        airflow db init &&
        airflow users create \
          --username admin \
          --firstname admin \
          --lastname admin \
          --role Admin \
          --email admin@admin.com \
          --password admin
    volumes:
      - airflow_logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ./requirements.txt:/opt/airflow/requirements.txt
    depends_on:
      - postgres

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:2.9.1-python3.10
    container_name: airflow-webserver
    restart: always
    depends_on:
      - airflow-init
    ports:
      - "8081:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'True'
      AIRFLOW_CONN_POSTGRES_DATA: postgresql://user:userpass@postgres_data:5432/mydata
    volumes:
      - airflow_logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./sql:/opt/airflow/sql
      - .env:/opt/airflow/.env
      - ./requirements.txt:/opt/airflow/requirements.txt

    command: webserver

  airflow-scheduler:
    build: 
      context: .
      dockerfile: Dockerfile
    image: custom-airflow:2.9.1-python3.10
    container_name: airflow-scheduler
    restart: always
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      AIRFLOW_CONN_POSTGRES_DATA: postgresql://user:userpass@postgres_data:5432/mydata
    volumes:
      - airflow_logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
      - ./src:/opt/airflow/src
      - ./sql:/opt/airflow/sql
      - .env:/opt/airflow/.env  
      - ./requirements.txt:/opt/airflow/requirements.txt
    command: scheduler

  streamlit:
    build:
      context: .
      dockerfile: Dockerfile.streamlit 
    container_name: streamlit
    ports:
      - "8501:8501"
    volumes:
      - ./visualization:/app/visualization 
    environment:
      - PYTHONUNBUFFERED=1
      - DB_HOST=postgres_data
      - DB_PORT=5432
      - DB_NAME=mydata
      - DB_USER=user
      - DB_PASSWORD=userpass
    depends_on:
      - postgres_data


volumes:
  postgres_data_airflow:
  postgres_data_custom:
  airflow_logs:
